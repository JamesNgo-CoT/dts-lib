const LoginModel=Model.extend({defaults:{app:"cot-app"},idAttribute:"sid",parse(e,t){return this.clear(),Model.prototype.parse.call(this,e,t)},login(){return this.isNew()?new Promise(((e,t)=>{this.save(null,{headers:{Accept:"application/json; charset=utf-8","Content-Type":"application/json; charset=utf-8"}}).then((t=>{this.setLastVerified(new Date),e(t)}),((e,i,s)=>{t(s)}))})):this.verify()},logout(){return this.isNew()?Promise.resolve():new Promise((e=>{this.destroy({headers:{Authorization:this.attributes.userID}}).then((()=>{this.reset(),this.setLastVerified(null),e()}),(()=>{e()}))}))},verify(){return this.isNew()?Promise.reject():new Promise(((e,t)=>{this.fetch({headers:{Accept:"application/json; charset=utf-8","Content-Type":"application/json; charset=utf-8"}}).then((t=>{this.setLastVerified(new Date),e(t)}),((e,i,s)=>this.logout().then((()=>{t(s)}))))}))},lastVerified:null,preTimeout:null,preTimeoutDelay:177e4,timeout:null,timeoutDelay:18e5,setLastVerified(e){this.preTimeout&&(clearTimeout(this.preTimeout),this.preTimeout=null),this.timeout&&(clearTimeout(this.timeout),this.timeout=null),e?(this.lastVerified=e,this.preTimeout=setTimeout((()=>{this.trigger("pretimeout")}),this.preTimeoutDelay),this.timeout=setTimeout((()=>{this.trigger("timeout")}),this.timeoutDelay)):this.lastVerified=null}});
//# sourceMappingURL=login-model.min.js.map
